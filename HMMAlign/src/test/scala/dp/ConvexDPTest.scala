package test.scala.dp

import main.scala.dp.{ConvexDP, NeedlemanWunschAffine}
import org.scalatest._

class ConvexDPTest extends FlatSpec with Matchers {

  "ConvexDPTest" should "correcly align two sequences" in {
    val seqA = "AAA"
    val seqB = "A"

    val nmw = new ConvexDP(seqA,seqB,1,-1,10.0,1.0)

    //nmw.alignment().getScore should be (0.0)
    nmw.alignment().getAlignmentString._1 should be ("AAA")
    nmw.alignment().getAlignmentString._2 should be ("--A")
  }

    "ConvexDPTest" should "correcly align two longer sequences" in {
      val seqA = "AAAAAAAAA"
      val seqB = "A"

      val nmw = new ConvexDP(seqA,seqB,1,-1,10.0,1.0)

      //nmw.alignment().getScore should be (0.0)
      nmw.alignment().getAlignmentString._1 should be ("AAAAAAAAA")
      nmw.alignment().getAlignmentString._2 should be ("--------A")
    }

    "ConvexDPTest" should "correcly align two anchored longer sequences" in {
      val seqA = "GAGCTCAAGCTATGGAGTCGTCAGCAGTACTACT"
      val seqB = "ATGGAGTCGAGAGCGCGCTCGTCGACTATGGAGTCGTCAGCAGTACTACTGACGATGGAGTCGACAGCAGT"

      val nmw = new ConvexDP(seqA,seqB,3,-2,60.0,1.0)
      nmw.matrix.printMatrix()
      nmw.trace.printMatrix()
      val align = nmw.alignment

      println(align.getAlignmentString._1)
      println(align.getAlignmentString._2)
      align.getAlignmentString._1 should be ("TAAAAT")
      align.getAlignmentString._2 should be ("T----T")
    }

/*
  "ConvexDPTest" should "correcly align two anchored longer sequences" in {
    val seqA = "GAGCTCAAGCTATGGAGTCGTCAGCAGTACTACTGAGTATGGAGTCGACAGAGATATCATGCAATATTGTTAATAACATACAGTCAGATACGAATAACCTAGCGTGCCACATTGGGGATGAGTGATACTGTTTTTCTTTTTTCTTTTCAATATGGTTCCAATACTTTTTTATACAACAACAAACAATACCCATTTTAACAATACCAACACTGATACCTATACTGTGGTATTAAAATAAATA"
    val seqB = "AGAAATCCGGACTCAGATCTCGAGCTCAAGCTTCGGACAGCAGTATCATCGACTATGGAGTCGAGAGCGCGCTCGTCGACTATGGAGTCGTCAGCAGTACTACTGACGATGGAGTCGACAGCAGTGTGTGAGTCTATGGAGTCGAGAGCATAGACATCGAGTATGGAGTCGACTACAGTCGCTACGACTATGGAGTCGACAGAGATATCATGCAGTATGGAGTCGACAGCAGTATCTGCTGTCATGGAGTCGACTGCACGACAGTCGACTATGGAGTCGCGAGCGCTATGAGCGACTATGGGAATTCTCGACCTCGAGACAAATGGCAGCCATGGTACGATGATGATCCAGACATGATAAGATACATTGATGAGTTTGGACAAACCACAACTAGAATGCAGTGAAAAAAATGCTTTATTTGTGAAATTTGTGATGCTATTGCTTTATTTGTAACCATTATAAGCTGCAATAAACAAGTTAACAACAACAATTGCATTCATTTTATGTTTCAGGTTCAGGGGGAGGTGTGGGAGGTTTTTTAAAGCAAGTAAAACCTCTACAAATGTGGTATGGCTGATTATGATCCTCTAGATCAGATCTCTTGTTTATTGCAGCTTATAATGGTTACAAATAAAGCAATAGCATCACAAATTTCACAAATAAAGCATTTTTTTCACTGCATTCTAGTTGTGGTTTGTCCAAACTCATCAATGTATCTTATCATGTCTGGATCTACGTAATACGACTCACTATAGTTCTAGAGGCTCGAGAGGGGCCGCTTTACTTGTACAGCTCGTCCATGCCGAGAGTGATCCCGGCGGCGGTCACGAACTCCAGCAGGACCATGTGATCGCGCTTCTCGTTGGGGTCTTTGCTCAGGGCGGACTGGGTGCTCAGGTAGTGGTTGTCGGGCAGCAGCACGGGGCCGTCGCCGATGGGGGTGTTCTGCTGGTAGTGGTCGGCGAGCTGCACGCTGCCGTCCTCGATGTTGTGGCGGATCTTGAAGTTCACCTTGATGCCGTTCTTCTGCTTGTCGGCCATGATATAGACGTTGTGGCTGTTGTAGTTGTACTCCAGCTTGTGCCCCAGGATGTTGCCGTCCTCCTTGAAGTCGATGCCCTTCAGCTCGATGCGGTTCACCAGGGTGTCGCCCTCGAACTTCACCTCGGCGCGGGTCTTGTAGTTGCCGTCGTCCTTGAAGAAGATGGTGCGCTCCTGGACGTAGCCTTCGGGCATGGCGGACTTGAAGAAGTCGTGCTGCTTCATGTGGTCGGGGTAGCGGCTGAAGCACTGCACGCCGTAGGTCAGGGTGGTCACGAGGGTGGGCCAGGGCACGGGCAGCTTGCCGGTGGTGCAGATGAACTTCAGGGTCAGCTTGCCGTAGGTGGCATCGCCCTCGCCCTCGCCGGACACGCTGAACTTGTGGCCGTTTACGTCGCCGTCCAGCTCGACCAGGATGGGCACCACCCCGGTGAACAGCTCCTCGCCCTTGCTCACCATGGTCACTGTCTGCTTTGCTGTTGGTCTGGGCTCCTGGGTCACTGGCTTACTAATGGAGTCTTTATGTATGAGGACTCTTATCAATTGTTCTTCTATAAAGGTCTGCAGTGTTTCTGTTCGTCCCCTACATGGACACCCAGAGCCTCCTAAATACAGGAGCCCTGATAACTGCACAAGTGCTCAGATTCCAGCAGGGTGGAAAATGAGATAAAGTGTGCAGATGGGGAGGGGGACGTGAATGAGAGATTTGAGGGATGAAAAGGATGGATGAACGCATTGAAAATAGCCCCTTTCACAAAATAATACCAGTAAATTGTCATATAATTAATGACCAGACCTTTACCTGTAAATGATGTGATGTTCATATACAGAAGAATGCCAACAATTTACAGATGATTTTACAAATTCTTAATTTTCCTTTTCTAAATGGATTTGTTCACACATTATCTCTTCAAAGCAATTGAATTTTCTGGAAAAGATTGGCTGTGTGTGTAAAAGGTGCTACTGAGGAATTTAATGTGACATGGAATGAAGCAAACAGCAGCCTAAGACAGGATGGCAGGAAAAATGTCACATGTTTAAAATAAGAGTGAAACCAACGACCTGGACTTATAGAGACTGTGTGTCCTTAGGCAAAGCTCTTGTACAAACAGTGCTTGTGACTGTGAAATTCGGGGTTTGCCTGGATTGTGTTAAATGTGTGCTTGGATGTATCATAAAAAAGAATCGGTTCTCTGTATTTGACATTTTCTGTAATTTATCTAAAGTTACAACTGGCTATGCCTGATTTTTATCACTATTGAATCAATCATTTTAAAGAATGTTAAGTCTGCTGATTTGGAGAGCTCATTTACATTTATTTTGAATGTCTCTTATTTAACACAACTGATTTAAGCTTTA"

    val nmw = new ConvexDP(seqA,seqB,3,-2,60.0,1.0)
    val align = nmw.alignment

    println(align.getAlignmentString._1)
    println(align.getAlignmentString._2)
    align.getAlignmentString._1 should be ("TAAAAT")
    align.getAlignmentString._2 should be ("T----T")
  }
*/
}